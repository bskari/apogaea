
const int UNUSED_LED = -1;

#ifdef NRF52840_XXAA
#include "FastLED/src/platforms/arm/nrf52/clockless_arm_nrf52.h"
static_assert(FASTLED_NRF52_MAXIMUM_PIXELS_PER_STRING >= LED_COUNT, "You need to edit clockless_arm_nrf52.h and increase FASTLED_NRF52_MAXIMUM_PIXELS_PER_STRING");
#endif

const int LED_COLUMN_COUNT = 32;
const int LED_ROW_COUNT = 15;

// x first then y, starting at lower left corner

const int8_t XY_TO_STRIP[LED_COLUMN_COUNT][LED_ROW_COUNT] = {
    {-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1},
    {-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1},
    {-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1},
    {-1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1},
    {-1, -1, -1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 1, 1, 2, 2, 2, -1, -1, -1, -1, -1, -1},
    {3, 3, 3, 3, 1, 1, 2, 2, 2, -1, -1, -1, -1, -1, -1},
    {3, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
    {3, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
    {3, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
    {3, 3, 3, 3, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0},
    {3, 3, 3, 3, 1, 1, 2, 2, 0, 0, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
    {-1, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
    {-1, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, -1, -1, -1},
    {-1, -1, -1, -1, 4, 4, 4, 4, 4, 4, 4, 4, -1, -1, -1},
    {-1, -1, -1, -1, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, -1},
};
const int8_t XY_TO_OFFSET[LED_COLUMN_COUNT][LED_ROW_COUNT] = {
    {-1, -1, -1, 25, 26, 27, 28, 29, 30, 31, -1, -1, -1, -1, -1},
    {-1, -1, -1, 24, 38, 37, 36, 35, 34, 33, -1, -1, -1, -1, -1},
    {-1, -1, -1, 23, 40, 41, 42, 43, 44, 45, 46, 47, -1, -1, -1},
    {-1, -1, -1, 22, 56, 55, 54, 53, 52, 51, 50, 49, -1, -1, -1},
    {-1, -1, -1, 21, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, -1},
    {-1, -1, -1, 20, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, -1},
    {-1, -1, -1, 19, 80, 81, 82, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 18, -1, 85, 84, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 17, -1, 86, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 16, -1, 87, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 15, -1, 88, -1, -1, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 14, 89, 16, 17, 18, -1, -1, -1, -1, -1, -1},
    {42, 40, 18, 16, 13, 90, 15, 21, 20, -1, -1, -1, -1, -1, -1},
    {43, 39, 19, 15, 12, 91, 14, 23, 24, 25, 26, 27, 28, 29, 30},
    {44, 38, 20, 14, 11, 92, 13, 39, 38, 37, 36, 35, 34, 33, 32},
    {45, 37, 21, 13, 10, 93, 12, 41, 42, 43, 44, 45, 46, 47, 48},
    {46, 36, 22, 12, 9, 94, 11, 57, 56, 55, 54, 53, 52, 51, 50},
    {47, 35, 23, 11, 8, 95, 10, 58, 11, 12, 13, 14, 15, 16, 17},
    {48, 34, 24, 10, 7, 96, 9, 59, 10, 24, 23, 22, 21, 20, 19},
    {49, 33, 25, 9, 6, 97, 8, 60, 9, 26, 27, 28, 29, 30, 31},
    {50, 32, 26, 8, 5, 98, 7, 61, 8, 38, 37, 36, 35, 34, 33},
    {51, 31, 27, 7, 4, 99, 6, 62, 7, 40, 41, 42, 43, 44, 45},
    {52, 30, 28, 6, 3, 100, 5, 63, 6, 52, 51, 50, 49, 48, 47},
    {53, 54, 55, 5, 2, 101, 4, 64, 5, 53, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, -1, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 63, 7, 6, 5, -1, -1, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 62, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18},
    {-1, -1, -1, -1, 61, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20},
    {-1, -1, -1, -1, 60, 31, 32, 33, 34, 35, 36, 37, -1, -1, -1},
    {-1, -1, -1, -1, 59, 44, 43, 42, 41, 40, 39, 38, -1, -1, -1},
    {-1, -1, -1, -1, 58, 46, 47, 48, 49, 50, -1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 57, 56, 55, 54, 53, 52, -1, -1, -1, -1, -1},
};
